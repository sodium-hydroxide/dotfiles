#!/bin/bash

# Function to get absolute path
get_absolute_path() {
    local path="$1"
    echo "$(cd "$(dirname "$path")" && pwd)/$(basename "$path")"
}

# Function to print file details similar to ls -la
print_file_details() {
    local file="$1"
    ls -la "$file" | tail -n 1
}

# Function to check if a file is binary
is_binary() {
    local file="$1"
    # Using 'file' command to detect binary files
    if file "$file" | grep -q "text"; then
        return 1 # Not binary
    else
        return 0 # Binary
    fi
}

# Function to process directory
process_directory() {
    local dir="$1"
    local base_dir=$(basename "$dir")

    # Skip .git directories
    if [[ "$base_dir" == ".git" ]]; then
        return
    fi

    # Check if directory is accessible
    if [ ! -r "$dir" ]; then
        echo "Permission denied: $dir"
        return
    fi

    echo -e "\nDirectory: $(get_absolute_path "$dir")"
    echo "total $(ls -1a "$dir" | wc -l)"

    # Process all entries in directory
    find "$dir" -maxdepth 1 -mindepth 1 | sort | while read -r entry; do
        # Skip .git directories
        if [[ $(basename "$entry") == ".git" ]]; then
            continue
        fi

        # Print ls -la style information
        print_file_details "$entry"

        # If it's a regular file and not binary, print its contents
        if [ -f "$entry" ]; then
            if ! is_binary "$entry"; then
                echo -e "\n==> File contents of: $(get_absolute_path "$entry") <=="
                cat "$entry"
                echo "========================================"
            fi
        fi

        # If it's a directory, recursively process it
        if [ -d "$entry" ]; then
            process_directory "$entry"
        fi
    done
}

# Main script
if [ $# -ne 1 ]; then
    echo "Usage: $0 <directory>"
    exit 1
fi

directory="$1"

if [ ! -d "$directory" ]; then
    echo "Error: $directory is not a directory"
    exit 1
fi

# Print the absolute path of the starting directory
echo "Starting directory: $(get_absolute_path "$directory")"
process_directory "$directory"

