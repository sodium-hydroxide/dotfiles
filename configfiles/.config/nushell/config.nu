# 1. Zoxide initialization
#    (generated by: `zoxide init nushell --hook prompt | save -f ~/.zoxide.nu`)
source ~/.zoxide.nu                                       # :contentReference[oaicite:0]{index=0}

$env.TRANSIENT_PROMPT_COMMAND = ""           # hide the full prompt on past commands :contentReference[oaicite:0]{index=0}

# 2) Define your custom, two‐line prompt:
$env.PROMPT_COMMAND = { ||
    # whoami@hostname in cyan@red@cyan

    # current Git branch (empty if none)
    let branch = (git branch --show-current err> /dev/null | str trim)

    # if in a repo, colour branch green/red based on uncommitted changes
    let git_segment = if $branch != "" {
        # count lines of `git status --porcelain`
        let dirty = (git status --porcelain err> /dev/null | lines | length)
        let colour = if $dirty > 0 { "red" } else { "green" }
        $"(ansi $colour){branch}(ansi reset)"
    } else {
        ""
    }

    # assemble first line
    $"(ansi cyan)(whoami)(ansi reset)(ansi red)@(ansi reset)(ansi cyan)(hostname)(ansi reset) (ansi blue)(pwd)(ansi reset) ($git_segment)\n"
}

# 3) Use a simple “> ” on the second line
$env.PROMPT_INDICATOR = "› "

# 3. lf integration
#    change into lf’s “last dir” upon exit
def lf [] {
    let temp_file = (mktemp)
    /opt/homebrew/bin/lf --last-dir-path $temp_file
    let new_dir   = (open $temp_file | str trim)
    rm $temp_file
    if ($new_dir | path exists) {
        cd $new_dir
    }
}

# 4. Swap cd to use zoxide, and expose the original as cdb
alias cd = z                                          # :contentReference[oaicite:1]{index=1}
def --env cdb [...rest] { cd $rest }
